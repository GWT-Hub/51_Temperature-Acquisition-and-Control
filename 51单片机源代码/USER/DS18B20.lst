C51 COMPILER V9.01   DS18B20                                                               06/03/2019 13:50:10 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN ..\OBJ\DS18B20.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE ..\HARDWARE\DS18B20.c BROWSE INCDIR(..\HARDWARE;..\HARDWARE) DEBUG OBJECTEX
                    -TEND PRINT(.\DS18B20.lst) OBJECT(..\OBJ\DS18B20.obj)

line level    source

   1          #include "DS18B20.h"
   2          
   3          /********************************************************
   4          ***********    函 数 名 ：Ds18b20Init    ****************
   5          ***********    功 能    ：DS18b20初始化  ****************
   6          *********************************************************/
   7          void Ds18b20Init()
   8          {
   9   1              u8 i;
  10   1              DSPORT = 0;              //总线拉低并延时480us~960us
  11   1              i = 70; 
  12   1              while(i--);
  13   1              DSPORT = 1;              //拉高总线并等待DS18B20拉低总线  
  14   1              delay1ms(5);     //即可初始化成功
  15   1      }
  16          
  17          /********************************************************
  18          ***********   函 数 名 ：Ds18b20Write           *********
  19          ***********   功 能    ：向DS18B20写入一个字节  *********
  20          *********************************************************/
  21          void Ds18b20Write(u8 dat)
  22          {
  23   1              u16 i, j;
  24   1              for(j=0; j<8; j++)      
  25   1              {
  26   2                      DSPORT = 0;     //总共写入8位数据，每次写入前先拉低总线          
  27   2                      i++;
  28   2                      DSPORT = dat & 0x01; //从最低位开始写入
  29   2                      i=6;
  30   2                      while(i--);               //每次写完一位延时60us
  31   2                      DSPORT = 1;                       //然后释放总线
  32   2                      dat >>= 1;
  33   2              }
  34   1      }
  35          
  36          /*********************************************************
  37          *********** 函 数 名 ：Ds18b20ReadByte            ********
  38          *********** 功 能    ：从DS18B20读取一个字节的数据 *******
  39          **********************************************************/
  40          u8 Ds18b20ReadByte()
  41          {
  42   1              u8 byte, b;
  43   1              u16 i, j;       
  44   1              for(j=8; j>0; j--)      
  45   1              {
  46   2                      DSPORT = 0;       //总共读取8位数据，每次读取前先拉低总线
  47   2                      i++;
  48   2                      DSPORT = 1;       //然后拉高总线
  49   2                      i++;i++;          //延时6us等待数据稳定
  50   2      
  51   2                      b = DSPORT;       //读取数据，最低位开始
  52   2      
  53   2                      byte = (byte >> 1) | (b << 7);//将读取的一位数据并存放                                    
  54   2              
C51 COMPILER V9.01   DS18B20                                                               06/03/2019 13:50:10 PAGE 2   

  55   2                      i = 4;        //延时48us再读取下一位数 
  56   2                      while(i--);
  57   2              }                               
  58   1              return byte;
  59   1      }
  60          
  61          /**********************************************************
  62          ***********   函 数 名 ：Ds18b20Chang            **********
  63          ***********   功 能    ：让DS18B20开始转化数据   **********
  64          **********************************************************/
  65          void  Ds18b20Chang()
  66          {
  67   1              Ds18b20Init();                  //DS18B20初始化
  68   1              delay1ms(1);
  69   1              Ds18b20Write(0xcc);     //跳过ROM操作命令                
  70   1              Ds18b20Write(0x44);     //温度转化命令   
  71   1      }
  72          
  73          /**********************************************************
  74          ***********   函 数 名 ：Ds18b20ReadTempCom   *************
  75          ***********   功 能    ：发送温度读取命令     *************
  76          **********************************************************/
  77          void  Ds18b20ReadTempCom()
  78          {       
  79   1      
  80   1              Ds18b20Init();                  //DS18B20初始化
  81   1              delay1ms(1);
  82   1              Ds18b20Write(0xcc);     //跳过ROM操作命令 
  83   1              Ds18b20Write(0xbe);     //读取温度命令          
  84   1      }                                                                                          
  85          
  86          /**********************************************************
  87          ***********  函 数 名 ：Ds18b20ReadTemp      **************
  88          ***********  功 能    ：读取一个int类型的温度数据 *********
  89          ***********************************************************/
  90          int Ds18b20ReadTemp()
  91          {
  92   1              u16 temp = 0;
  93   1              u8 tmh, tml;
  94   1              Ds18b20Chang();           //写入转化命令         
  95   1              Ds18b20ReadTempCom();     //等待转换完成读取数据                
  96   1              tml = Ds18b20ReadByte();  //温度值为16位        
  97   1              tmh = Ds18b20ReadByte();                
  98   1              temp = tmh;
  99   1              temp <<= 8;
 100   1              temp |= tml;
 101   1              return temp;
 102   1      }
 103          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    198    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
